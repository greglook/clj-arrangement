version: 2.1

# Executor configuration
executors:
  clojure:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1
    working_directory: ~/repo


# Test jobs
jobs:
  style:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install cljstyle
          environment:
            CLJSTYLE_VERSION: 0.13.0
          command: |
            wget https://github.com/greglook/cljstyle/releases/download/${CLJSTYLE_VERSION}/cljstyle_${CLJSTYLE_VERSION}_linux.tar.gz
            tar -xzf cljstyle_${CLJSTYLE_VERSION}_linux.tar.gz
      - run:
          name: Check source formatting
          command: "./cljstyle check --report"

  lint:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install clj-kondo
          environment:
            CLJ_KONDO_VERSION: 2019.12.14
          command: |
            wget https://github.com/borkdude/clj-kondo/releases/download/v${CLJ_KONDO_VERSION}/clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
            unzip clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
      - run:
          name: clj-kondo
          command: "./clj-kondo --lint src test"

  test-clj:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-test-clj-{{ checksum "project.clj" }}
            - v1-test-clj-
      - run: lein deps
      - run: lein check
      - run: lein kaocha unit-clj
      - save_cache:
          key: v1-test-clj-{{ checksum "project.clj" }}
          paths:
            - ~/.m2

  test-cljs:
    executor: clojure
    environment:
      QT_QPA_PLATFORM: offscreen
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-test-cljs-{{ checksum "project.clj" }}
            - v1-test-cljs-
      - run:
          name: Install Javascript runtime
          command: |
            curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
            sudo apt-get update
            sudo apt-get install -y nodejs
            npm install ws
      - run: lein kaocha unit-cljs
      - save_cache:
          key: v1-test-cljs-{{ checksum "project.clj" }}
          paths:
            - ~/.m2
            - node_modules

  coverage:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-coverage-{{ checksum "project.clj" }}
            - v1-coverage-
            - v1-test-clj-
      - run:
          name: Generate test coverage
          command: lein coverage --codecov
      - save_cache:
          paths:
            - ~/.m2
          key: v1-coverage-{{ checksum "project.clj" }}
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - run:
          name: Publish Coverage
          command: 'bash <(curl -s https://codecov.io/bash) -f target/coverage/codecov.json'


# Workflow definitions
workflows:
  version: 2
  test:
    jobs:
      - style
      - lint
      - test-clj
      - test-cljs
      - coverage:
          requires:
            - test-clj
